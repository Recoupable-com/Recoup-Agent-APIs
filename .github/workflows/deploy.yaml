name: Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - "**" # This will trigger the workflow on push to any branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Debug Secrets
        run: |
          echo "DROPLET_IP is set: ${{ secrets.DROPLET_IP != '' }}"
          echo "DROPLET_USER is set: ${{ secrets.DROPLET_USER != '' }}"
          echo "DROPLET_PASSWORD is set: ${{ secrets.DROPLET_PASSWORD != '' }}"

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            echo "Connected to Droplet"
            # Create app directory if it doesn't exist
            mkdir -p ~/recoup-agent-apis
            cd ~/recoup-agent-apis

            # Initialize git repository if it doesn't exist
            if [ ! -d .git ]; then
              git init
              git remote add origin https://github.com/sweetmantech/Recoup-Agent-APIs.git
            fi

            # Fetch latest code and handle local changes
            git fetch --all
            git checkout -B ${{ github.ref_name }} origin/${{ github.ref_name }}
            git reset HEAD --hard
            git pull origin/${{ github.ref_name }}

            echo "Current branch:"
            git branch --show-current
            echo "Git status:"
            git status

            sudo apt update -y
            sudo apt install nginx -y
            sudo rm /etc/nginx/sites-available/default
            sudo ln -s /etc/nginx/sites-available/your_domain.com /etc/nginx/sites-enabled/your_domain.com
            sudo tee /etc/nginx/sites-available/your_domain.com > /dev/null <<EOF
            server {
                listen 80;
                server_name your_domain.com;
                location / {
                    proxy_pass http://localhost:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                    proxy_redirect off;
                }
            }
            EOF
            sudo systemctl restart nginx

            # Ensure correct Node.js version
            source ~/.nvm/nvm.sh
            nvm use 20

            # Install dependencies
            npm install

            # Start or restart the app using PM2
            if pm2 list | grep -q "recoup-agent-apis"; then
              pm2 restart recoup-agent-apis --update-env --cwd ~/recoup-agent-apis
            else
              pm2 start npm --name "recoup-agent-apis" --cwd ~/recoup-agent-apis -- run start
            fi
